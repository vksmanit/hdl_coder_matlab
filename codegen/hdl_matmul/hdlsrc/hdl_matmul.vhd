-- -------------------------------------------------------------
-- 
-- File Name: /home/vipinsoni/MTP/hdl_coder_matlab/codegen/hdl_matmul/hdlsrc/hdl_matmul.vhd
-- Created: 2018-02-08 09:56:52
-- 
-- Generated by MATLAB 8.4, MATLAB Coder 2.7 and HDL Coder 3.5
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- c_out                         ce_out        1
-- state_store                   ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: hdl_matmul
-- Source Path: hdl_matmul
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.hdl_matmul_pkg.ALL;

ENTITY hdl_matmul IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        a_in                              :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        b_in                              :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        ce_out                            :   OUT   std_logic;
        c_out                             :   OUT   std_logic_vector(7 DOWNTO 0);  -- int8
        state_store                       :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
        );
END hdl_matmul;


ARCHITECTURE rtl OF hdl_matmul IS

  -- Functions
  -- HDLCODER_TO_SIGNED
  FUNCTION hdlcoder_to_signed(arg: real; width: integer) RETURN signed IS
  BEGIN
    RETURN to_signed(integer(arg), width);
  END FUNCTION;


  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL y_in                             : real := 0.0;  -- double
  SIGNAL y_in_1                           : real := 0.0;  -- double
  SIGNAL y_in_2                           : real := 0.0;  -- double
  SIGNAL x_in                             : real := 0.0;  -- double
  SIGNAL x_in_1                           : real := 0.0;  -- double
  SIGNAL x_in_2                           : real := 0.0;  -- double
  SIGNAL state                            : real := 0.0;  -- double
  SIGNAL state_1                          : real := 0.0;  -- double
  SIGNAL state_2                          : real := 0.0;  -- double
  SIGNAL tmp                              : real := 0.0;  -- double
  SIGNAL tmp_1                            : std_logic;
  SIGNAL tmp_2                            : real := 0.0;  -- double
  SIGNAL tmp_3                            : real := 0.0;  -- double
  SIGNAL state_3                          : real := 0.0;  -- double
  SIGNAL tmp_4                            : real := 0.0;  -- double
  SIGNAL tmp_5                            : std_logic;
  SIGNAL tmp_6                            : real := 0.0;  -- double
  SIGNAL state_4                          : real := 0.0;  -- double
  SIGNAL x_in_3                           : real := 0.0;  -- double
  SIGNAL tmp_7                            : std_logic;
  SIGNAL state_5                          : real := 0.0;  -- double
  SIGNAL tmp_8                            : real := 0.0;  -- double
  SIGNAL state_6                          : real := 0.0;  -- double
  SIGNAL y_in_3                           : real := 0.0;  -- double
  SIGNAL tmp_9                            : std_logic;
  SIGNAL tmp_10                           : real := 0.0;  -- double
  SIGNAL state_7                          : real := 0.0;  -- double
  SIGNAL tmp_11                           : real := 0.0;  -- double
  SIGNAL x_in_4                           : real := 0.0;  -- double
  SIGNAL tmp_12                           : std_logic;
  SIGNAL tmp_13                           : real := 0.0;  -- double
  SIGNAL x_in_5                           : real := 0.0;  -- double
  SIGNAL tmp_14                           : std_logic;
  SIGNAL tmp_15                           : real := 0.0;  -- double
  SIGNAL x_in_6                           : real := 0.0;  -- double
  SIGNAL tmp_16                           : real := 0.0;  -- double
  SIGNAL x_in_7                           : real := 0.0;  -- double
  SIGNAL tmp_17                           : std_logic;
  SIGNAL tmp_18                           : real := 0.0;  -- double
  SIGNAL x_in_8                           : real := 0.0;  -- double
  SIGNAL tmp_19                           : std_logic;
  SIGNAL tmp_20                           : real := 0.0;  -- double
  SIGNAL x_in_9                           : real := 0.0;  -- double
  SIGNAL tmp_21                           : real := 0.0;  -- double
  SIGNAL tmp_22                           : real := 0.0;  -- double
  SIGNAL x_in_10                          : real := 0.0;  -- double
  SIGNAL tmp_23                           : std_logic;
  SIGNAL tmp_24                           : real := 0.0;  -- double
  SIGNAL x_in_11                          : real := 0.0;  -- double
  SIGNAL tmp_25                           : real := 0.0;  -- double
  SIGNAL tmp_26                           : std_logic;
  SIGNAL tmp_27                           : real := 0.0;  -- double
  SIGNAL x_in_12                          : real := 0.0;  -- double
  SIGNAL tmp_28                           : real := 0.0;  -- double
  SIGNAL tmp_29                           : std_logic;
  SIGNAL tmp_30                           : real := 0.0;  -- double
  SIGNAL x_in_reg_x_in                    : real := 0.0;  -- double
  SIGNAL tmp_31                           : std_logic;
  SIGNAL tmp_32                           : std_logic;
  SIGNAL tmp_33                           : std_logic;
  SIGNAL tmp_34                           : real := 0.0;  -- double
  SIGNAL state_8                          : real := 0.0;  -- double
  SIGNAL tmp_35                           : real := 0.0;  -- double
  SIGNAL y_in_4                           : real := 0.0;  -- double
  SIGNAL tmp_36                           : std_logic;
  SIGNAL tmp_37                           : real := 0.0;  -- double
  SIGNAL y_in_5                           : real := 0.0;  -- double
  SIGNAL tmp_38                           : real := 0.0;  -- double
  SIGNAL y_in_6                           : real := 0.0;  -- double
  SIGNAL tmp_39                           : std_logic;
  SIGNAL tmp_40                           : real := 0.0;  -- double
  SIGNAL y_in_7                           : real := 0.0;  -- double
  SIGNAL tmp_41                           : real := 0.0;  -- double
  SIGNAL y_in_8                           : real := 0.0;  -- double
  SIGNAL tmp_42                           : std_logic;
  SIGNAL tmp_43                           : real := 0.0;  -- double
  SIGNAL y_in_9                           : real := 0.0;  -- double
  SIGNAL tmp_44                           : std_logic;
  SIGNAL tmp_45                           : real := 0.0;  -- double
  SIGNAL y_in_reg_y_in                    : real := 0.0;  -- double
  SIGNAL tmp_46                           : std_logic;
  SIGNAL tmp_47                           : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL tmp_49                           : real := 0.0;  -- double
  SIGNAL state_9                          : real := 0.0;  -- double
  SIGNAL tmp_50                           : std_logic;
  SIGNAL tmp_51                           : real := 0.0;  -- double
  SIGNAL tmp_52                           : std_logic;
  SIGNAL tmp_53                           : std_logic;
  SIGNAL tmp_54                           : std_logic;
  SIGNAL c_out_1                          : signed(7 DOWNTO 0);  -- int8
  SIGNAL tmp_55                           : std_logic;
  SIGNAL tmp_56                           : std_logic;
  SIGNAL a_in_signed                      : signed(7 DOWNTO 0);  -- int8
  SIGNAL tmp_57                           : real := 0.0;  -- double
  SIGNAL tmp_58                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_59                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL A                                : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL A_1                              : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL tmp_60                           : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL tmp_61                           : std_logic;
  SIGNAL b_in_signed                      : signed(7 DOWNTO 0);  -- int8
  SIGNAL tmp_62                           : real := 0.0;  -- double
  SIGNAL tmp_63                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_64                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL B                                : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL B_1                              : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL tmp_65                           : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL tmp_66                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_67                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL C                                : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL C_1                              : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL tmp_68                           : vector_of_real(0 TO 3) := (OTHERS => 0.0);  -- double [4]
  SIGNAL c_out_2                          : signed(7 DOWNTO 0);  -- int8
  SIGNAL tmp_69                           : signed(7 DOWNTO 0);  -- int8
  SIGNAL state_store_1                    : signed(7 DOWNTO 0);  -- int8

BEGIN
  y_in <= 1.0;

  enb <= clk_enable;

  y_in_1 <= 1.0;

  y_in_2 <= 1.0;

  x_in <= 1.0;

  x_in_1 <= 1.0;

  x_in_2 <= 1.0;

  state <= 0.0;

  state_1 <= 1.0;

  state_2 <= 2.0;

  
  tmp_1 <= '1' WHEN 2.0 = tmp ELSE
      '0';

  
  tmp_3 <= tmp_2 WHEN tmp_1 = '0' ELSE
      state_2;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp58
  state_3 <= tmp_3;

  
  tmp_5 <= '1' WHEN 2.0 = tmp_4 ELSE
      '0';

  
  tmp_6 <= tmp_2 WHEN tmp_5 = '0' ELSE
      state_3;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp47
  state_4 <= tmp_6;

  
  tmp_7 <= '1' WHEN 2.0 = x_in_3 ELSE
      '0';

  
  tmp_8 <= state_5 WHEN tmp_7 = '0' ELSE
      state_1;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp102
  state_6 <= tmp_8;

  
  tmp_9 <= '1' WHEN 2.0 = y_in_3 ELSE
      '0';

  
  tmp_10 <= state_5 WHEN tmp_9 = '0' ELSE
      state_6;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp85
  state_7 <= tmp_10;

  tmp_11 <= tmp + 1.0;

  --HDL code generation from MATLAB function: hdl_matmul_falseregionp68
  x_in_4 <= tmp_11;

  
  tmp_12 <= '1' WHEN 2.0 = tmp ELSE
      '0';

  
  tmp_13 <= x_in_4 WHEN tmp_12 = '0' ELSE
      x_in_2;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp61
  x_in_5 <= tmp_13;

  
  tmp_14 <= '1' WHEN 2.0 = tmp_4 ELSE
      '0';

  
  tmp_15 <= tmp WHEN tmp_14 = '0' ELSE
      x_in_5;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp50
  x_in_6 <= tmp_15;

  --HDL code generation from MATLAB function: hdl_matmul
  --C(x_in,y_in) =int8(double( A(x_in,:)) *double( B (:,y_in)));
  tmp_16 <= x_in_3 + 1.0;

  --HDL code generation from MATLAB function: hdl_matmul_falseregionp112
  x_in_7 <= tmp_16;

  
  tmp_17 <= '1' WHEN 2.0 = x_in_3 ELSE
      '0';

  
  tmp_18 <= x_in_7 WHEN tmp_17 = '0' ELSE
      x_in_1;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp105
  x_in_8 <= tmp_18;

  
  tmp_19 <= '1' WHEN 2.0 = y_in_3 ELSE
      '0';

  
  tmp_20 <= x_in_3 WHEN tmp_19 = '0' ELSE
      x_in_8;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp88
  x_in_9 <= tmp_20;

  tmp_22 <= tmp_21 + 1.0;

  --HDL code generation from MATLAB function: hdl_matmul_falseregionp35
  x_in_10 <= tmp_22;

  
  tmp_23 <= '1' WHEN 2.0 = tmp_21 ELSE
      '0';

  
  tmp_24 <= x_in_10 WHEN tmp_23 = '0' ELSE
      x_in;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp28
  x_in_11 <= tmp_24;

  
  tmp_26 <= '1' WHEN 2.0 = tmp_25 ELSE
      '0';

  
  tmp_27 <= tmp_21 WHEN tmp_26 = '0' ELSE
      x_in_11;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp18
  x_in_12 <= tmp_27;

  
  tmp_29 <= '1' WHEN 2.0 = tmp_28 ELSE
      '0';

  
  tmp_30 <= tmp_21 WHEN tmp_29 = '0' ELSE
      x_in_12;

  x_in_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      x_in_reg_x_in <= 1.0;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        x_in_reg_x_in <= tmp_30;
      END IF;
    END IF;
  END PROCESS x_in_reg_process;
  x_in_3 <= x_in_reg_x_in;

  
  tmp_31 <= '1' WHEN 0.0 = state_5 ELSE
      '0';

  
  tmp <= x_in_3 WHEN tmp_31 = '0' ELSE
      x_in_9;

  
  tmp_32 <= '1' WHEN 1.0 = tmp_2 ELSE
      '0';

  
  tmp_21 <= tmp WHEN tmp_32 = '0' ELSE
      x_in_6;

  
  tmp_33 <= '1' WHEN 2.0 = tmp_21 ELSE
      '0';

  
  tmp_34 <= tmp_28 WHEN tmp_33 = '0' ELSE
      state;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp25
  state_8 <= tmp_34;

  tmp_35 <= tmp_4 + 1.0;

  --HDL code generation from MATLAB function: hdl_matmul_falseregionp54
  y_in_4 <= tmp_35;

  
  tmp_36 <= '1' WHEN 2.0 = tmp_4 ELSE
      '0';

  
  tmp_37 <= y_in_4 WHEN tmp_36 = '0' ELSE
      y_in_2;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp44
  y_in_5 <= tmp_37;

  tmp_38 <= y_in_3 + 1.0;

  --HDL code generation from MATLAB function: hdl_matmul_falseregionp98
  y_in_6 <= tmp_38;

  
  tmp_39 <= '1' WHEN 2.0 = y_in_3 ELSE
      '0';

  
  tmp_40 <= y_in_6 WHEN tmp_39 = '0' ELSE
      y_in_1;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp82
  y_in_7 <= tmp_40;

  tmp_41 <= tmp_25 + 1.0;

  --HDL code generation from MATLAB function: hdl_matmul_falseregionp21
  y_in_8 <= tmp_41;

  
  tmp_42 <= '1' WHEN 2.0 = tmp_25 ELSE
      '0';

  
  tmp_43 <= y_in_8 WHEN tmp_42 = '0' ELSE
      y_in;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp10
  y_in_9 <= tmp_43;

  
  tmp_44 <= '1' WHEN 2.0 = tmp_28 ELSE
      '0';

  
  tmp_45 <= tmp_25 WHEN tmp_44 = '0' ELSE
      y_in_9;

  y_in_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      y_in_reg_y_in <= 1.0;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        y_in_reg_y_in <= tmp_45;
      END IF;
    END IF;
  END PROCESS y_in_reg_process;
  y_in_3 <= y_in_reg_y_in;

  
  tmp_46 <= '1' WHEN 0.0 = state_5 ELSE
      '0';

  
  tmp_4 <= y_in_3 WHEN tmp_46 = '0' ELSE
      y_in_7;

  
  tmp_47 <= '1' WHEN 1.0 = tmp_2 ELSE
      '0';

  
  tmp_25 <= tmp_4 WHEN tmp_47 = '0' ELSE
      y_in_5;

  
  tmp_48 <= '1' WHEN 2.0 = tmp_25 ELSE
      '0';

  
  tmp_49 <= tmp_28 WHEN tmp_48 = '0' ELSE
      state_8;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp14
  state_9 <= tmp_49;

  
  tmp_50 <= '1' WHEN 2.0 = tmp_28 ELSE
      '0';

  
  tmp_51 <= tmp_28 WHEN tmp_50 = '0' ELSE
      state_9;

  state_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      state_5 <= 0.0;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        state_5 <= tmp_51;
      END IF;
    END IF;
  END PROCESS state_reg_process;

  
  tmp_52 <= '1' WHEN 0.0 = state_5 ELSE
      '0';

  
  tmp_2 <= state_5 WHEN tmp_52 = '0' ELSE
      state_7;

  
  tmp_53 <= '1' WHEN 1.0 = tmp_2 ELSE
      '0';

  
  tmp_28 <= tmp_2 WHEN tmp_53 = '0' ELSE
      state_4;

  
  tmp_54 <= '1' WHEN 2.0 = tmp_28 ELSE
      '0';

  c_out_1 <= to_signed(2#00000000#, 8);

  
  tmp_55 <= '1' WHEN 1.0 = tmp_2 ELSE
      '0';

  
  tmp_56 <= '1' WHEN 0.0 = state_5 ELSE
      '0';

  a_in_signed <= signed(a_in);

  tmp_57 <= real(to_integer(a_in_signed));

  tmp_58 <= hdlcoder_to_signed(x_in_3, 32) - 1;

  tmp_59 <= hdlcoder_to_signed(y_in_3, 32) - 1;

  p0A_output : PROCESS (A, tmp_57, tmp_58, tmp_59)
    VARIABLE add_cast : signed(63 DOWNTO 0);
  BEGIN
    --HDL code generation from MATLAB function: hdl_matmul_trueregionp75
    A_1 <= A;
    add_cast := resize(tmp_59 & '0', 64);
    A_1(to_integer(tmp_58 + resize(add_cast, 32))) <= tmp_57;
  END PROCESS p0A_output;


  A_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      A <= (OTHERS => 0.0);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        A <= tmp_60;
      END IF;
    END IF;
  END PROCESS A_reg_process;

  
  tmp_60 <= A WHEN tmp_56 = '0' ELSE
      A_1;

  
  tmp_61 <= '1' WHEN 0.0 = state_5 ELSE
      '0';

  b_in_signed <= signed(b_in);

  tmp_62 <= real(to_integer(b_in_signed));

  tmp_63 <= hdlcoder_to_signed(x_in_3, 32) - 1;

  tmp_64 <= hdlcoder_to_signed(y_in_3, 32) - 1;

  p0B_output : PROCESS (B, tmp_62, tmp_63, tmp_64)
    VARIABLE add_cast1 : signed(63 DOWNTO 0);
  BEGIN
    --HDL code generation from MATLAB function: hdl_matmul_trueregionp79
    B_1 <= B;
    add_cast1 := resize(tmp_64 & '0', 64);
    B_1(to_integer(tmp_63 + resize(add_cast1, 32))) <= tmp_62;
  END PROCESS p0B_output;


  B_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      B <= (OTHERS => 0.0);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        B <= tmp_65;
      END IF;
    END IF;
  END PROCESS B_reg_process;

  
  tmp_65 <= B WHEN tmp_61 = '0' ELSE
      B_1;

  tmp_66 <= hdlcoder_to_signed(tmp, 32) - 1;

  tmp_67 <= hdlcoder_to_signed(tmp_4, 32) - 1;

  p0C_output : PROCESS (C, tmp_60, tmp, tmp_65, tmp_4, tmp_66, tmp_67)
    VARIABLE add_temp : real;
    VARIABLE add_cast2 : signed(63 DOWNTO 0);
    VARIABLE add_cast_0 : vector_of_signed64(0 TO 1);
  BEGIN
    --HDL code generation from MATLAB function: hdl_matmul_trueregionp41
    C_1 <= C;
    add_temp := 0.0;

    FOR t_0 IN 0 TO 1 LOOP
      add_cast_0(t_0) := resize(to_signed(t_0, 32) & '0', 64);
      add_temp := add_temp + (tmp_60(to_integer((hdlcoder_to_signed(tmp, 32) + resize(add_cast_0(t_0), 32)) - 1)) * tmp_65(to_integer(to_signed(t_0, 32) + resize(2 * (hdlcoder_to_signed(tmp_4, 32) - 1), 32))));
    END LOOP;

    add_cast2 := resize(tmp_67 & '0', 64);
    C_1(to_integer(tmp_66 + resize(add_cast2, 32))) <= add_temp;
  END PROCESS p0C_output;


  C_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      C <= (OTHERS => 0.0);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        C <= tmp_68;
      END IF;
    END IF;
  END PROCESS C_reg_process;

  
  tmp_68 <= C WHEN tmp_55 = '0' ELSE
      C_1;

  --HDL code generation from MATLAB function: hdl_matmul_trueregionp6
  c_out_2 <= hdlcoder_to_signed(tmp_68(to_integer((hdlcoder_to_signed(tmp_21, 32) + resize(2 * (hdlcoder_to_signed(tmp_25, 32) - 1), 32)) - 1)), 8);

  
  tmp_69 <= c_out_1 WHEN tmp_54 = '0' ELSE
      c_out_2;

  c_out <= std_logic_vector(tmp_69);

  state_store_1 <= hdlcoder_to_signed(tmp_51, 8);

  state_store <= std_logic_vector(state_store_1);

  ce_out <= clk_enable;

END rtl;

